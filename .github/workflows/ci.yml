name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions: read-all

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.81.0

jobs:
  fmt_lint:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version
      - name: rustfmt check
        run: cargo fmt --all -- --check
      - name: clippy check
        run: cargo clippy --workspace --all-targets -- -D warnings

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: fmt_lint
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: wasm32-unknown-unknown
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version
      - name: Cargo fetch
        run: cargo fetch --locked
      - name: Build (all targets)
        run: cargo build --workspace --all-targets --locked
      - name: Tests
        run: cargo test --workspace --all-features --all-targets -- --nocapture
      - name: WASM release build
        run: cargo build -p converter --release --target wasm32-unknown-unknown --locked
      - name: Artifact (wasm)
        if: success()
        uses: actions/upload-artifact@v4
        with:
            name: converter-wasm
            path: target/wasm32-unknown-unknown/release/*.wasm

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: fmt_lint
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: wasm32-unknown-unknown
      - name: Install protoc
        run: |
            sudo apt-get update
            sudo apt-get install -y protobuf-compiler
            protoc --version
      - name: Install cargo-tarpaulin
        run: cargo +1.82.0 install cargo-tarpaulin
      - name: Run coverage
        run: cargo +1.82.0 tarpaulin --workspace --all-features --all-targets --locked --out Xml --output-dir coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/cobertura.xml
          fail_ci_if_error: true
